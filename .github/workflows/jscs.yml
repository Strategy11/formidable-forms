name: Inspections

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, labeled, synchronize ]

jobs:
  runESLintInspection:
    if: contains(github.event.pull_request.labels.*.name, 'run analysis')
    name: Run ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json', 'package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Debug cache info
        run: |
          echo "Cache key hash: ${{ hashFiles('package-lock.json', 'package.json') }}"
          echo "Cache hit: ${{ steps.cache-node-modules.outputs.cache-hit }}"
          echo "Full cache key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json', 'package.json') }}"

      - name: Check cache and install dependencies
        run: |
          if [[ "${{ steps.cache-node-modules.outputs.cache-hit }}" == "true" ]]; then
            echo "Using cached node_modules"
            echo "Cache size: $(du -sh node_modules | cut -f1)"
          else
            echo "Installing dependencies"
            npm ci --include=dev
          fi

      - name: Analyze js code style
        run: ./node_modules/.bin/eslint .
